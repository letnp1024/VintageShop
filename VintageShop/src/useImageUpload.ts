import imageCompression from 'browser-image-compression'

export const uploadImageToCloudinary = async (
  file: File,
  identifier: string,
  index: number,
  folder = 'products',
  prefix = 'product'
): Promise<string> => {
  console.log('File truy·ªÅn v√†o uploadImageToCloudinary:', file)
  const timestamp = Date.now()
  const fileName = `${prefix}_${identifier}_${timestamp}_${index + 1}`

  // ‚ö°Ô∏è T√πy ch·ªçn n√©n ·∫£nh
  const options = {
    maxSizeMB: 1,           // Dung l∆∞·ª£ng t·ªëi ƒëa (MB)
    maxWidthOrHeight: 1000,   // Resize n·∫øu qu√° l·ªõn
    useWebWorker: true        // D√πng Web Worker cho hi·ªáu su·∫•t
  }

  // üß± N√©n ·∫£nh
  const compressedFile = await imageCompression(file, options)

  // üì§ T·∫°o form data
  const formData = new FormData()
  formData.append("file", compressedFile)
  formData.append("upload_preset", "VintageShop")
  formData.append("public_id", `${folder}/${fileName}`)

  // üì° Upload
  const response = await fetch("https://api.cloudinary.com/v1_1/dhcren7tz/image/upload", {
    method: "POST",
    body: formData
  })

  const data = await response.json()
  if (!response.ok) throw new Error(data.error?.message || "Upload th·∫•t b·∫°i")

  return data.secure_url
}
